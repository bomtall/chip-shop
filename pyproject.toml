[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]
include = ["fryer"]

[project]
name = "chip-shop"
dynamic = ["version"]
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "convertbng>=0.7.5",
    "fastexcel>=0.12.0",
    "folium>=0.19.3",
    "geopandas>=1.0.1",
    "filelock>=3.16.1",
    "jupyterlab>=4.3.3",
    "lxml>=5.3.0",
    "numpy>=2.1.3",
    "pandas>=2.2.3",
    "plotly>=5.24.1",
    "polars>=1.18.0",
    "psutil>=6.1.0",
    "pyarrow>=18.1.0",
    "python-dotenv>=1.0.1",
    "requests>=2.32.3",
    "shapely>=2.0.6",
    "tqdm>=4.67.1",
]

# uv add --group <group_name> <package_name>

[dependency-groups]
dev = [
    "black>=24.10.0",
    "isort>=5.13.2",
    "lxml-stubs>=0.5.1",
    "mypy>=1.14.1",
    "pandas-stubs>=2.2.3.241126",
    "pre-commit>=4.0.1",
    "ruff>=0.8.0",
    "tqdm-stubs>=0.2.1",
    "types-psutil>=6.1.0.20241221",
    "types-requests>=2.32.0.20241016",
    "types-shapely>=2.0.0.20241221",
]
test = [
    "pytest-cov>=6.0.0",
    "pytest>=8.3.3",
    "requests-mock>=1.12.1",
]

[tool.uv]
default-groups = ["dev", "test"]

[tool.pytest.ini_options]
markers = [
    "integration: mark a test that needs external data sources.",
]
addopts = "--cov=fryer --cov-report term-missing"

[tool.isort]
profile = "black"

[[tool.mypy.overrides]]
# No stubs for these packages
module = "geopandas.*,pyogrio.*,convertbng.util.*,fryer.*"
ignore_missing_imports = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D211", # warning: `one-blank-line-before-class` (D203) and `no-blank-line-before-class` (D211) are incompatible. Ignoring `one-blank-line-before-class`.
    "D213", # warning: `multi-line-summary-first-line` (D212) and `multi-line-summary-second-line` (D213) are incompatible. Ignoring `multi-line-summary-second-line`.
    "COM812", # warning: The following rules may cause conflicts when used with the formatter: `COM812`, `D203`, `ISC001`. To avoid unexpected behavior, we recommend disabling these rules, either by removing them from the `select` or `extend-select` configuration, or adding them to the `ignore` configuration.
    "D203", # warning: The following rules may cause conflicts when used with the formatter: `COM812`, `D203`, `ISC001`. To avoid unexpected behavior, we recommend disabling these rules, either by removing them from the `select` or `extend-select` configuration, or adding them to the `ignore` configuration.
    "ISC001", # warning: The following rules may cause conflicts when used with the formatter: `COM812`, `D203`, `ISC001`. To avoid unexpected behavior, we recommend disabling these rules, either by removing them from the `select` or `extend-select` configuration, or adding them to the `ignore` configuration.
    "G004", # Okay to use fstring in logger, the convience is worth the runtime slowness
    "D100", # Bring this back in by adding docstrings
    "D101", # Bring this back in by adding docstrings
    "D102", # Bring this back in by adding docstrings
    "D103", # Bring this back in by adding docstrings
    "D104", # Bring this back in by adding docstrings
    "PD901", # Using generic variable names should not be a problem
    "FIX002", # Need to figure out how to fix this
    "E501", # Need to figure out how to fix this
    "D205", # Need to figure out how to fix this
]
extend-safe-fixes = [
    "C408", # dict literal
]

[tool.ruff.lint.per-file-ignores]
"src/fryer/all.py" = [
    "A004", # Okay to shadow here
]
"**/tests/*" = [
    "A002", # Okay to shadow in tests
    "ANN001", # Don't need annotations
    "ANN201", # Don't need annotations
    "DTZ001", # Okay not to pass tzinfo for datetime
    "PLR0913", # Too many arguments for tests okay due to fixtures
    "PLR2004", # Okay to have magic constants to assert against
    "S101", # Want to use asserts
]
"*.ipynb" = [
    "T201", # Okay to print in notebooks
    "ERA001", # Okay to have commented out code in a notebook
]
